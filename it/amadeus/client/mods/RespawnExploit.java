package it.amadeus.client.mods;

import it.amadeus.client.event.Event;
import it.amadeus.client.event.events.PacketReceive;
import it.amadeus.client.event.events.Update;
import it.amadeus.client.module.Module;
import it.amadeus.client.utilities.ChatUtil;
import it.amadeus.client.utilities.Utils;
import net.minecraft.init.Blocks;
import net.minecraft.network.play.server.S02PacketChat;
import net.minecraft.util.BlockPos;
import net.minecraft.util.EnumChatFormatting;
import net.minecraft.util.Vec3;

import java.util.ArrayList;

public final class RespawnExploit extends Module {

    private final ArrayList<BlockPos> targets = new ArrayList<>();
    private boolean startTime = false;
    private double finalX, finalY, finalZ;
    private int delay = 0;

    @Override
    public String getName() {
        return "RespawnExploit";
    }

    @Override
    public String getDescription() {
        return "Vulano In Eruzione";
    }

    @Override
    public int getKey() {
        return 0;
    }

    @Override
    public Category getCategory() {
        return Category.MOVEMENTS;
    }

    @Override
    public void onEvent(Event event) {
        if (event instanceof Update) {
            if (startTime) delay++;
            switch (delay) {
                case 3:
                    for (BlockPos pos : targets) {
                        Utils.breakBlock(pos);
                        Utils.blinkToPosFromPos2(new Vec3(finalX, finalY, finalZ), new Vec3(pos.getX() + 0.5, pos.getY() + 1, pos.getZ() + 0.5), 15);
                        Utils.breakBlock(pos);
                        ChatUtil.print(EnumChatFormatting.GREEN + " try breaking..");
                        targets.remove(pos);
                    }
                    startTime = false;
                    break;
            }
        }
        if (event instanceof PacketReceive) {
            if (((PacketReceive) event).getPacket() instanceof S02PacketChat) {
                S02PacketChat packetChat = (S02PacketChat) ((PacketReceive) event).getPacket();
                if (packetChat.getChatComponent().getFormattedText().equals("§r§9§l> §r§fVerrai respawnato in §r§3§l1 §r§bsecondi§r§f!§r")) {
                    startTime = true;
                }
            }
        }
    }

    @Override
    public void onEnable() {
        int range = 100;
        for (int y = range; y >= -range; y--) {
            for (int x = range; x >= -range; x--) {
                for (int z = range; z >= -range; z--) {
                    int posX = (int) (mc.thePlayer.posX + x);
                    int posY = (int) (mc.thePlayer.posY + y);
                    int posZ = (int) (mc.thePlayer.posZ + z);
                    BlockPos pos = new BlockPos(posX, posY, posZ);
                    if (Utils.getBlock(pos).equals(Blocks.bed)) {
                        targets.add(pos);
                        ChatUtil.print(EnumChatFormatting.YELLOW + "added 1 bed");
                    }
                }
            }
        }
        super.onEnable();
    }

    @Override
    public void onDisable() {
        this.finalX = 0;
        this.finalY = 0;
        this.finalZ = 0;
        this.delay = 0;
        this.startTime = false;
        this.targets.clear();
        super.onDisable();
    }
}